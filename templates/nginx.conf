
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
load_module modules/ngx_http_modsecurity_module.so;
events {}

http {
		include       mime.types;
    default_type  application/octet-stream;

    ### Elastic cfg
		upstream elasticsearch {
			server "{{ el_network_host }}:{{ el_http_port }}";
			keepalive 15; #???
		}

		### Kibana config
		upstream kibana {
			server "{{ kb_server_host }}:{{ kb_server_port }}";
		}

    sendfile        on;
    keepalive_timeout  65;

    gzip  on;

    server {
        modsecurity on;
        modsecurity_rules_file /etc/nginx/modsec_includes.conf;
        auth_basic           “DANGER”;
        auth_basic_user_file /etc/nginx/.htpasswd;
        listen 80;

				location / {

                                }
        try_files $uri $uri/ /index.html= 404;

                                ### Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        }

        location /kibana {
        rewrite /kibana /kibana/;
                                }
        location ~ ^/kibana/(.*)$ {
        rewrite /kibana/(.*) /$1 break;
                ###proxy pass to kibana upstream
        proxy_pass http://kibana;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection      ‘upgrade’;
        proxy_cache_bypass      $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
 }

        location /elasticsearch/ {
                ###proxy pass to elastic upstream
                rewrite ^/elasticsearch(.*) /$1 break;
                proxy_pass http://elasticsearch;

                proxy_redirect off;
                proxy_buffering off;
                proxy_set_header Host $host;
                proxy_set_header Connection "Keep-Alive";
                proxy_set_header Proxy-Connection "Keep-Alive";

        }
        }


}


    # HTTPS server
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
